@model AtlasSD.Models.Region
@using AtlasSD.Controllers
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Localization;
@inject IViewLocalizer Localizer
@inject IStringLocalizer<SharedResources> SharedLocalizer
@{
    ViewData["Title"] = SharedLocalizer["Edit"];
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@SharedLocalizer["Edit"]</h2>

<form asp-action="Edit">
    <div class="form-horizontal">
        <h4>@SharedLocalizer["Region"]</h4>
        <hr />
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input type="hidden" asp-for="Id" />
        <div class="form-group">
            <label asp-for="Code" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="Code" class="form-control" />
                <span asp-validation-for="Code" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="NameEN" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="NameEN" class="form-control" />
                <span asp-validation-for="NameEN" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="NameKK" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="NameKK" class="form-control" />
                <span asp-validation-for="NameKK" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="NameRU" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="NameRU" class="form-control" />
                <span asp-validation-for="NameRU" class="text-danger"></span>
            </div>
        </div>
        @*<div class="form-group">
            <label asp-for="Year" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                @Html.DropDownList("Year", (IEnumerable<SelectListItem>)ViewBag.Year, htmlAttributes: new { @class = "form-control" })
                <span asp-validation-for="Year" class="text-danger"></span>
            </div>
        </div>*@
        <div class="form-group">
            <label asp-for="Area" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="Area" class="form-control" />
                <span asp-validation-for="Area" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="Population" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="Population" class="form-control" />
                <span asp-validation-for="Population" class="text-danger"></span>
            </div>
        </div>
        <input type="hidden" asp-for="Coordinates" />
        <input type="hidden" asp-for="Year" />
        <input id="backlinktext" type="hidden" name="backlink" />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@SharedLocalizer["Save"]" class="btn btn-default" />
            </div>
        </div>
    </div>
</form>

<div>
    <a id="backlink" href="@ViewBag.BackLink">@SharedLocalizer["BackToList"]</a>
</div>

@*@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}*@

<script>

    $.validator.methods.range = function (value, element, param) {
        var globalizedValue = value.replace(",", ".");
        return this.optional(element) || (globalizedValue >= param[0] && globalizedValue <= param[1]);
    }

    $.validator.methods.number = function (value, element) {
        return this.optional(element) || /-?(?:\d+|\d{1,3}(?:[\s\.,]\d{3})+)(?:[\.,]\d+)?$/.test(value);
    }
    //Date dd/MM/yyyy
    $.validator.methods.date = function (value, element) {
        var date = value.split("/");
        return this.optional(element) || !/Invalid|NaN/.test(new Date(date[2], date[1], date[0]).toString());
    }
</script>

<script>
    $(document).ready(function (e) {
        if ($('#backlinktext').val()) {
            $('#backlink').prop("href", document.referrer);
        }
        else {
            $('#backlinktext').val(document.referrer);
        }
        if (!$('#backlink').prop("href")) {
            $('#backlink').prop("href", document.referrer);
        }
    });
</script>